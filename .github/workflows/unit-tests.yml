name: Unit tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  swiftlint:

    name: Run SwiftLint

    if: github.event_name == 'pull_request'

    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v3
    - name: Fetch PR's target branch
      run: git fetch --no-tags --prune --depth=1 origin ${{ github.base_ref }}
    - name: Run SwiftLint on files changed in the PR
      uses: norio-nomura/action-swiftlint@3.2.1
      with:
        args: --force-exclude
      env:
        DIFF_BASE: ${{ github.base_ref }}

  unit-tests:

    name: Run unit tests

    runs-on: macos-12
    timeout-minutes: 30

    steps:

    - name: Check out the code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_14.1.app/Contents/Developer

    - name: Install xcbeautify
      continue-on-error: true
      run: brew install xcbeautify

    - name: Run tests
      run: set -o pipefail && swift test | xcbeautify --report junit --report-path . --junit-report-filename tests.xml

    - name: Publish Unit Tests Report
      uses: mikepenz/action-junit-report@v3
      if: always()
      with:
        check_name: Test Report
        report_paths: tests.xml
        require_tests: true
